    面试官您好，我是就读于天津职业技术师范大学的大三学生刘彦勇，我喜欢学习技术，之前做过一些校企合作的项目，喜欢在项目实践中学习。在项目实现过程中选择了java技术栈，边学习边实践的过程中对项目需要使用的开源工具和框架进行了学习和比较分析。比如在项目中通信框架的选择上，我在最后一公里项目中选择了netty作为通信框架，因为在之前的学习中，我们进行过相关测试，相比tomcat，netty更适合高并发的场景，可以做更多的自定义，同时我们使用了netty编写服务器能更加轻量级，没有使用集成开发框架springboot.
netty使用TCP层协议，可以自定义编解码器，封装了nio
        要点1：netty和nio区别
        要点2：netty通信和tomcat区别
        要点3：netty源码


我给您简单介绍一下我的项目，第一个是最后一公里项目，是一个导航项目，是通过先记录行径路线，后使用路线导航的地图。通过前端调用百度地图sdk获得定位坐标，经过时钟打点获取坐标，将坐标存入elasticsearch，同时可以在对应地点加标记添加参数属性，前端使用charts接受查到的elasticsearch数据进行展示。最初的简单版本使用kd树做的最近邻，根据项目的实时推送使用websocket做前后端通信协议，有用户导航用户寻找对接
rabbit做消息队列
        业务：制作门牌号地图，小范围内构建路径和标记，作用：比如很近的距离但是存在路障，我们可以通过用户的形成轨迹来提供道路，
数据放入mysql的：
        要点：kd树
        要点：websocket （http1.0 1.1 2.0）
        要点：rabbitmq工作模式     （对比kafka）
        要点：elasticsearch启动过程
问题:定位的遮挡问题（有待），点的冗余问题。
    传统的我们的检索是通过文章，逐个遍历找到对应关键词的位置。而倒排索引，是通过分词策略，形成了词和文章的映射关系表，这种词典+映射表即为倒排索引。有了倒排索引，就能实现o（1）时间复杂度的效率检索文章了，极大的提高了检索效率。


        扩展：mysql  redis 一致性     -----------读redis，写操作mysql,binlog变化通知redis
